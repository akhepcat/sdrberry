Installing sdrberry from source can be challenging because multiple libraries are necessary and most is build from source.
The software is tested on Raspberry PI Model 4B and the 64 bit version of rasperry pi OS with the GUI switched of.
The install script will clone the github repository and download and install all components needed.

## Install and compile with cmake
Download the install file in pi home directory (there are install files for different SDR's)
```
wget https://raw.githubusercontent.com/paulh002/sdrberry/master/install/install.sh
chmod +x install.sh
./install.sh
```

If you are not sure which install file to use for your SDR device use the plain install.sh file.
And install the SoapySDR driver of choice manualy.
To add a SDR device to sdrberry edit the cfg file [SDR receivers] entry and add the name of the device.
Also add the device configuration (copy the [radioberry] entry and change the entry name. Also add the device probe name at the [probes]
entry. 

The filter entry is used to send I2C commands to a bandpass filter

[filter]
address = {"32", "33", "63"}
command_rx = {"21", "137", "24", "20", "133", "144", "21", "137", "48", "25", "133", "48", "37", "133", "20", "21", "134", "20", "21", "137", "18", "21", "137", "18", "21", "137", "18", "21", "137", "18", "21", "137", "18", "21", "137", "18", "21", "137", "18", "21", "137", "18", "21", "137", "18", "21", "137", "18"}
command_tx = {"21", "73", "8", "22", "69", "128", "21", "73", "32", "25", "69", "32", "21", "73", "4", "21", "70", "2", "21", "70", "2", "21", "73", "2", "21", "73", "2", "21", "73", "2", "21", "73", "2", "21", "73", "2", "21", "73", "2", "21", "73", "2", "21", "73", "2", "21", "73", "2"}
i2cdevice = "pcf8574"
passthrough_rx = {"21", "137", "18"}
passthrough_tx = {"21", "73", "2"}

The [address] depicts the I2C address of the filter(2), there can be 1 or more I2C addresses configured.
One or more I2C commands will be send to the bandpassfilter, in example above 3 commands are send.
The commands and addressed are entered in decimal.

The [bands] entry configures the bands that can be used. Based on the SoapySDR information the bands supported by the device will be used.

[bands]
f_high = {"1880000", "3800000", "5450000", "7200000", "10150000", "14350000", "18168000", "21450000", "29000000", "52000000", "70500000", "107000000", "146000000", "436000000", "1300000000", "2400000000"}
f_low = {"1800000", "3500000", "5350000", "7000000", "10100000", "14000000", "18068000", "21000000", "28000000", "50000000", "70000000", "83000000", "144000000", "430000000", "1240000000", "2320000000"}
labels = {"m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "cm", "cm", "cm"}
meters = {"160", "80", "60", "40", "30", "20", "17", "15", "10", "6", "4", "3", "2", "70", "23", "13"}
mode = {"lsb", "lsb", "lsb", "lsb", "lsb", "usb", "usb", "usb", "usb", "usb", "usb", "usb", "usb", "usb", "usb", "usb"}

The audio device used (for input and output) is configured in the [Audio] section.
With the cli command aplay -l you can list the device name of the audio device in use.
Use raspi-config to switch of all internal audio devices of the pi or comment the config #dtparam=audio=on in /boot/config.txt file.

[Audio]
device = "USB Audio Device"

The video display is configured in the software for a 800x480 display. The most common 5 or 7 inch display size
# Enable DRM VC4 V3D driver
dtoverlay=vc4-kms-v3d
max_framebuffers=2
framebuffer_depth=16

Cat interface is supported based on FT891 commands but is adapted for use with an ESP32 remote controle board.
In principle any RS232 to USB converter can be used. The device is configured in the [CAT] section

[CAT]
USB = "/dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0"

Devices are configured in a number of sections, most important are the sample rates and span setting.
Best to use the ready proposed entries. For direct conversion SDR's a dc filter can be swiched on. dc=1
dc=0 will switch of the filter. Drive, gain and if-gain are the start up values for GUI sliders.

[hifiberry]
drive = "100"
gain = "0"
if-gain = "40"
samplerate="192"
samplerate_tx="192"
span="96"
dc=1


The audiobuffer is kept as small as possible but for some devices it need to be increased like the hackrf and rtlsdr. 
This can be done by adding buffersize to the device entry.
audiobuffersize=4096

Depending on the version of raspberry pi OS version the name if the touchscreen driver need to be specified.
Mouse is detected automaticly during startup.
[input]
mousexx = "Mouse"
touchscreen = "raspberrypi-ts"

