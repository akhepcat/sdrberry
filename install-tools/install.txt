sudo apt-get install -y ninja-build
sudo apt-get install -y\
    cmake g++ \
    libpython-dev python-numpy swig
git clone https://github.com/pothosware/SoapySDR.git
cd SoapySDR
git pull origin master
mkdir build
cd build
cmake ..
make -j4
sudo make install
sudo ldconfig #needed on debian systems
SoapySDRUtil --info

sudo apt-get install -y libiio-dev
sudo apt-get install -y libiio-utils

sudo apt-get install -y libasound-dev 
sudo ldconfig

git clone https://github.com/intel-iot-devkit/tinyb
mkdir build
cd build
cmake ..
make
sudo make install
sudo ldconfig 

https://wiki.analog.com/resources/tools-software/linux-software/libiio
git clone https://github.com/analogdevicesinc/libad9361-iio
sudo apt-get install doxygen
sudo apt-get install -y libiio-dev
sudo apt-get install libiio-utils
cd libad9361-iio
cmake ./CMakeLists.txt
mkdir build
make
sudo make install
sudo ldconfig #needed on debian systems


//audio
sudo apt-get remove pulseaudio
# Edit boot config with:
sudo nano /boot/config.txt
# so that:
cat /boot/config.txt
...
# Enable audio (loads snd_bcm2835)
#dtparam=audio=on
dtparam=audio=off

sudo nano /usr/share/alsa/alsa.conf
defaults.ctl.card 1
defaults.pcm.card 1
// test
speaker-test -c2 -t sine -f 500



sudo ldconfig /usr/local/lib/SoapySDR/modules0.8/
cmake ./CMakeLists.txt

git clone https://github.com/pothosware/SoapyPlutoSDR
cd SoapyPlutoSDR
mkdir build
cd build
cmake ..
make
sudo make install
sudo ldconfig

check usb met: sudo lsusb
SoapySDRUtil --probe="driver=plutosdr,hostname=192.168.100.1"

// Install BLE
wget http://www.kernel.org/pub/linux/bluetooth/bluez-5.60.tar.xz
tar xvf bluez-5.60.tar.xz
sudo apt-get install -y libusb-dev libreadline-dev libglib2.0-dev libudev-dev libdbus-1-dev libical-dev
sudo apt-get install python-docutils
cd bluez-5.60
./configure --enable-library
make -j4
sudo make install
btmon -v

// Install BOOST
sudo apt-cache search libboost  // to check latest version
sudo apt-get install libboost1.62-all-dev


//Put in the Additional Linker inputs:
/lib/arm-linux-gnueabihf/libpthread.so.0

sudo apt-get install -y fftw3-dev
git clone git://github.com/jgaeddert/liquid-dsp.git
sudo apt-get install automake autoconf
./bootstrap.sh
./configure
make -j4
sudo make install
sudo ldconfig

//SoapySDR remote
https://github.com/pothosware/SoapyRemote/wiki

pluto
sudo apt install libxml2 libxml2-dev bison flex cmake git libaio-dev libboost-all-dev

libraries
atomic;bluetooth;SoapySDR
/lib/arm-linux-gnueabihf/libpthread.so.0;/lib/arm-linux-gnueabihf/libasound.so;/lib/arm-linux-gnueabihf/libfftw3.so.3;/usr/local/lib/libliquid.so;/usr/local/lib/libtinyb.so
/usr/local/lib/librtaudio.so

// update firmware
sudo rpi-update
sudo apt upgrade


// soundcard
sudo apt-get remove pulseaudio
sudo nano /usr/share/alsa/alsa.conf
# then replace:
#defaults.ctl.card 0
#defaults.pcm.card 0
# with:
defaults.ctl.card 1
defaults.pcm.card 1

cat ~/.asoundrc
cat << EOF | tee ~/.asoundrc

pcm.!default {
        type hw
        card 1
}

ctl.!default {
        type hw
        card 1
}
EOF


// blinking add in file:
/etc/default/keyboard
BLANK_TIME=0
POWERDOWN_TIME=0

// Prevent blinking with 5inch LCD TFT display
# uncomment this if your display has a black border of unused pixels visible
# and your display can output without overscan
disable_overscan=1 

cat /proc/bus/input/devices

# Check the name of the audio device with alsmixer use F6 to select audio device
# change sdrberry_settings.cfg 
alsamixer

[Audio]
device = "USB Audio Device"

I manage to remove boot messages by modifying /boot/cmdline.txt, adding
fbcon=map:2

Easier Splash Screen (not as fast but continuous) based on this link:

make two files in /etc/systemd/system/ called splashscreen0.service and splashscreen1.service with the same contents, except the line starting with ExecStart change fb# to fb0 and fb1 respectivley.

[Unit]
Description=Splash screen
DefaultDependencies=no
After=local-fs.target

[Service]
ExecStart=/usr/bin/fbi -d /dev/fb# --noverbose -a /opt/splash.png
StandardInput=tty
StandardOutput=tty

[Install]
WantedBy=sysinit.target

This will display the image on BOTH fb0 and fb1, so that when the switch happens it will not show (I see a barely visible flicker when it happens).

Once this is done run systemctl enable splashscreen0 and systemctl enable splashscreen1 as root, and restart. The image will now stay on the TFT screen permanently, except when an app is run. :)


20:21:08:10:E3:6C


RtAudio::LINUX_PULSE